<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Avispa μF - invoice generating software built on top of Avispa ECM
  ~ Copyright (C) 2023 Rafał Hiszpański
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.avispa</groupId>
	<artifactId>microf</artifactId>
	<version>2.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Avispa μF</name>
	<description>Simple application for invoice creation and taxes calculation</description>

	<developers>
		<developer>
			<id>hiszpanski.rafal</id>
			<email>avispa@rafalhiszpanski.pl</email>
			<name>Rafał Hiszpański</name>
		</developer>
	</developers>

	<distributionManagement>
		<repository>
			<id>avispa-repository-release</id>
			<name>Avispa Repository Release</name>
			<url>https://repository.rafalhiszpanski.pl/releases</url>
		</repository>
		<snapshotRepository>
			<id>avispa-repository-snapshot</id>
			<name>Avispa Repository Snapshot</name>
			<url>https://repository.rafalhiszpanski.pl/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>avispa-repository-release</id>
			<name>Avispa Repository Release</name>
			<url>https://repository.rafalhiszpanski.pl/releases</url>
		</repository>
		<repository>
			<id>avispa-repository-snapshot</id>
			<name>Avispa Repository Snapshot</name>
			<url>https://repository.rafalhiszpanski.pl/snapshots</url>
		</repository>
	</repositories>

	<modules>
		<module>ecm-client-backend-api</module>
		<module>ecm-client-backend-test</module>
		<module>ecm-client-backend-api-impl</module>
		<module>ecm-client-backend</module>
		<module>microf-custom</module>
		<module>aggregate-report</module>
	</modules>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
		<mapstruct.version>1.6.0.Beta1</mapstruct.version>
		<project.version>${project.version}</project.version>
		<sonar.coverage.jacoco.xmlReportPaths>
			${maven.multiModuleProjectDirectory}/aggregate-report/target/site/jacoco-aggregate/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.skip>true</sonar.skip>
		<ecm.version>2.2.0</ecm.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.avispa</groupId>
				<artifactId>ecm</artifactId>
				<version>${ecm.version}</version>
			</dependency>
			<dependency>
				<groupId>com.avispa</groupId>
				<artifactId>ecm-client-backend</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.avispa</groupId>
				<artifactId>ecm-client-backend-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.avispa</groupId>
				<artifactId>ecm-client-backend-api-impl</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.avispa</groupId>
				<artifactId>ecm-client-backend-test</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.avispa.microf</groupId>
				<artifactId>microf-custom</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>sonar</id>

			<properties>
				<sonar.skip>false</sonar.skip>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<!-- disable variables replacement for other files -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.11</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.11.0.3922</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<!-- This is needed when using Lombok 1.18.16 and above -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
						<!-- Mapstruct should follow the lombok path(s) -->
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.unmappedTargetPolicy=IGNORE
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-user-custom-sql</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/docker/sql</outputDirectory>
							<resources>
								<resource>
									<directory>sql</directory>
									<includes>
										<include>**/*-postgresql.sql</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
