version: "3.9"
name: microf
services:
  postgresql:
    image: postgres:${POSTGRESQL_VERSION}
    restart: always
    volumes:
      - ${WORKSPACE_PATH}/docker/data:/var/lib/postgresql/data
      - ${WORKSPACE_PATH}/docker/sql:/docker-entrypoint-initdb.d/:ro
    command: postgres -c listen_addresses='*'
    environment:
      TZ: Europe/Warsaw
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "microf"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  microf:
    build:
      context: ../microf-custom
      dockerfile: Dockerfile
    image: avispa/microf:2.0.0
    restart: "no" #on-failure
    ports:
      - 8080:8080
      #- 5005:5005
    volumes:
      - ${WORKSPACE_PATH}/config/microf.docker.properties:/opt/microf/config/microf.properties:ro
      - ${WORKSPACE_PATH}/config/microf-configuration.zip:/opt/microf/config/microf-configuration.zip:ro
      - ${WORKSPACE_PATH}/docker/logs:/opt/microf/logs
      - ${WORKSPACE_PATH}/docker/repository:${FILE_STORE_PATH}
    environment:
      TZ: Europe/Warsaw
      AVISPA_ECM_FILE_STORE_PATH: ${FILE_STORE_PATH}
      AVISPA_ECM_FILE_STORE_NAME: ${FILE_STORE_NAME}
      DATASOURCE_USERNAME: ${DATABASE_USER}
      DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      REMOTE_DEBUG: 0
    links:
      - postgresql
    depends_on:
      postgresql:
        condition: service_healthy