spring.config.import=classpath:ecm-application.properties,classpath:ecm-client-application.properties
spring.config.additional-location=file:/config/microf.properties

spring.application.name=AVISPA \u03BCF Invoice Manager

avispa.ecm.file-store.path=default-file-store
avispa.ecm.configuration.overwrite=true

avispa.ecm.client.configuration.application=Default application
avispa.ecm.client.configuration.layout=Default layout
avispa.ecm.client.configuration.menu=Default menu

# use @...@ instead of ${...} https://stackoverflow.com/questions/38207067/maven-resource-filter-not-working
microf.version=@project.version@
microf.invoice.counter-strategy=monthCounterStrategy

logging.file.name=logs/microf.log
logging.logback.rollingpolicy.file-name-pattern=logs/microf.%d{yyyy-MM-dd}.%i.log

#---
spring.config.activate.on-profile=dev
spring.application.name=AVISPA \u03BCF Invoice Manager Dev

spring.sql.init.data-locations=optional:classpath*:data-h2.sql,optional:file:${microf.data.init-script:}

spring.datasource.url=jdbc:h2:mem:dev;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
#spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.username=sa
spring.datasource.password=password
# type this to use data-h2.sql instead of data.sql
#spring.sql.init.platform=h2

logging.level.com.avispa.microf=DEBUG

#---
spring.config.activate.on-profile=prod

avispa.ecm.configuration.overwrite=false

#postgresql is the name of the default network with the name of the service in docker compose
spring.datasource.url=jdbc:postgresql://postgresql:5432/microf

#logging.level.com.avispa.microf=DEBUG